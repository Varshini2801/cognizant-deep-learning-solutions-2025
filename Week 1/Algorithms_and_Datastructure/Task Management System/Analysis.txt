| Operation | Time Complexity |
| --------- | --------------- |
| Add       | O(n) (at end)   |
| Search    | O(n)            |
| Traverse  | O(n)            |
| Delete    | O(n)            |

Advantages of Linked Lists over Arrays
| Feature           | Array               | Linked List                   |
| ----------------- | ------------------- | ----------------------------- |
| Size              | Fixed               | Dynamic (can grow/shrink)     |
| Insert/Delete     | Costly (O(n))       | Efficient (O(1) at head)      |
| Memory            | Efficient but rigid | Flexible, may use more memory |
| Access (by index) | Fast O(1)           | Slow O(n) (must traverse)     |

Conclusion: Linked lists are better when the number of elements changes frequently or insert/delete operations are common.
